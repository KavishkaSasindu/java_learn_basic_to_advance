Exception---
**exception are something you can handle and you should handle.


---in our code there are 3 types of errors
    1.Compile Time errors
        --when the code compile there  are sevaral syntax errors or this related issues can be happen
    2.Runtime errors
        --when the code compile success but when the code run it can be cause to errors
        example ArithmaticException,NullPointerException
    3.Logical errors
        --Logical errors mean in our logic .it can be an error 

---Exception Throw keyword
->you can use throw keyword to create an exception
so you can stop printing exception and create exception then send or storeit.
simply it throw the exception and catch block wil catch the exception.

----creating custom exception
    for that you can ceate a nw class for your exception name and create constructors (parameterized one and eafult)
    also the class extends from Exception class

    public class KavishkaException extends Exception {

        KavishkaException() {

        }

        KavishkaException(String str) {
            super(str)  //for pass value for base c;ass constructor
        }
    }

    public class Main {
        public static void main(String[] args) {

            int number1 = 0;
            int number2 = 20;


            int result;

            try{
                if( number1 == 0){
                    throw new KavishkaException("Can not divide by zero);
                }else{
                    result = number2/number1;
                }
            }catch(KavishkaException e){
                System.out.println(e);
            }catch(Exception e){
                System.out.println(e)
            }
        }
    }